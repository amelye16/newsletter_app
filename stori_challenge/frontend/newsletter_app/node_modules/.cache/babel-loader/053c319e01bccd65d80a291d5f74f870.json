{"ast":null,"code":"import { GET_NEWSLETTERS, ADD_NEWSLETTER, GET_ALL_NEWSLETTER_TYPE, GET_ONE_NEWSLETTER, GET_ALL_SUSCRIBED, ADD_MAIL_USER, GET_STADISTICS } from \"../const/actionTypes\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_NEWSLETTERS:\n      return {\n        ...state,\n        newsletterList: action.payload\n      };\n    case GET_ALL_NEWSLETTER_TYPE:\n      return {\n        ...state,\n        newsletterTypeList: action.payload\n      };\n    case GET_STADISTICS:\n      return {\n        ...state,\n        stadisticsList: action.payload\n      };\n    case GET_ONE_NEWSLETTER:\n      return {\n        ...state,\n        currentData: action.payload\n      };\n    case GET_ALL_SUSCRIBED:\n      return {\n        ...state,\n        suscribedList: action.payload\n      };\n    case ADD_NEWSLETTER:\n      return {\n        ...state,\n        currentData: action.payload\n      };\n    case ADD_MAIL_USER:\n      return {\n        ...state,\n        newsletterList: state.newsletterList.map(newsletter => newsletter.newsletterId === action.payload.newsletterId ? action.payload : newsletter)\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["GET_NEWSLETTERS","ADD_NEWSLETTER","GET_ALL_NEWSLETTER_TYPE","GET_ONE_NEWSLETTER","GET_ALL_SUSCRIBED","ADD_MAIL_USER","GET_STADISTICS","state","action","type","newsletterList","payload","newsletterTypeList","stadisticsList","currentData","suscribedList","map","newsletter","newsletterId"],"sources":["C:/Users/L03028948/Documents/Documentos Idalia/Stori Challenge/Frontend/newsletter_app/src/reducer/NewsletterReducer.jsx"],"sourcesContent":["import {\r\n  GET_NEWSLETTERS,\r\n  ADD_NEWSLETTER,\r\n  GET_ALL_NEWSLETTER_TYPE,\r\n  GET_ONE_NEWSLETTER,\r\n  GET_ALL_SUSCRIBED,\r\n  ADD_MAIL_USER,\r\n  GET_STADISTICS,\r\n} from \"../const/actionTypes\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_NEWSLETTERS:\r\n      return {\r\n        ...state,\r\n        newsletterList: action.payload,\r\n      };\r\n    case GET_ALL_NEWSLETTER_TYPE:\r\n      return {\r\n        ...state,\r\n        newsletterTypeList: action.payload,\r\n      };\r\n    case GET_STADISTICS:\r\n      return {\r\n        ...state,\r\n        stadisticsList: action.payload,\r\n      };\r\n    case GET_ONE_NEWSLETTER:\r\n      return {\r\n        ...state,\r\n        currentData: action.payload,\r\n      };\r\n    case GET_ALL_SUSCRIBED:\r\n      return {\r\n        ...state,\r\n        suscribedList: action.payload,\r\n      };\r\n    case ADD_NEWSLETTER:\r\n      return {\r\n        ...state,\r\n        currentData: action.payload,\r\n      };\r\n    case ADD_MAIL_USER:\r\n      return {\r\n        ...state,\r\n        newsletterList: state.newsletterList.map((newsletter) =>\r\n          newsletter.newsletterId === action.payload.newsletterId\r\n            ? action.payload\r\n            : newsletter\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,cAAc,EACdC,uBAAuB,EACvBC,kBAAkB,EAClBC,iBAAiB,EACjBC,aAAa,EACbC,cAAc,QACT,sBAAsB;AAE7B,gBAAe,CAACC,KAAK,EAAEC,MAAM,KAAK;EAChC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,eAAe;MAClB,OAAO;QACL,GAAGO,KAAK;QACRG,cAAc,EAAEF,MAAM,CAACG;MACzB,CAAC;IACH,KAAKT,uBAAuB;MAC1B,OAAO;QACL,GAAGK,KAAK;QACRK,kBAAkB,EAAEJ,MAAM,CAACG;MAC7B,CAAC;IACH,KAAKL,cAAc;MACjB,OAAO;QACL,GAAGC,KAAK;QACRM,cAAc,EAAEL,MAAM,CAACG;MACzB,CAAC;IACH,KAAKR,kBAAkB;MACrB,OAAO;QACL,GAAGI,KAAK;QACRO,WAAW,EAAEN,MAAM,CAACG;MACtB,CAAC;IACH,KAAKP,iBAAiB;MACpB,OAAO;QACL,GAAGG,KAAK;QACRQ,aAAa,EAAEP,MAAM,CAACG;MACxB,CAAC;IACH,KAAKV,cAAc;MACjB,OAAO;QACL,GAAGM,KAAK;QACRO,WAAW,EAAEN,MAAM,CAACG;MACtB,CAAC;IACH,KAAKN,aAAa;MAChB,OAAO;QACL,GAAGE,KAAK;QACRG,cAAc,EAAEH,KAAK,CAACG,cAAc,CAACM,GAAG,CAAEC,UAAU,IAClDA,UAAU,CAACC,YAAY,KAAKV,MAAM,CAACG,OAAO,CAACO,YAAY,GACnDV,MAAM,CAACG,OAAO,GACdM,UAAU;MAElB,CAAC;IACH;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module"}