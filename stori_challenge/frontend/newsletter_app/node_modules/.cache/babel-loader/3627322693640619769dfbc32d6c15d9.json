{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L03028948\\\\Documents\\\\Documentos Idalia\\\\Stori Challenge\\\\Frontend\\\\newsletter_app\\\\src\\\\contexts\\\\newsletterContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport NewsletterReducer from '../reducer/NewsletterReducer';\nimport { GET_NEWSLETTERS } from '../const/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewsletterContext = /*#__PURE__*/createContext();\nexport const NewsletterContextProvider = props => {\n  _s();\n  const inicialState = {\n    newsletterList: []\n  };\n\n  //use reducer pra editar, crear eliminar, etc\n  //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\n  //para que realice el cambio en el valor del estado\n  const [state, dispatch] = useReducer(NewsletterReducer, inicialState);\n\n  //obtener todos los rows\n\n  const getNewsletters = () => {\n    dispatch({\n      type: GET_NEWSLETTERS\n    });\n  };\n\n  //el estado que queremos compartir\n  return /*#__PURE__*/_jsxDEV(NewsletterContext.Provider, {\n    value: {\n      newsletterList: state.newsletterList\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsletterContextProvider, \"6+r947IF8xxgMRtOjonieh8uxGc=\");\n_c = NewsletterContextProvider;\nvar _c;\n$RefreshReg$(_c, \"NewsletterContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","NewsletterReducer","GET_NEWSLETTERS","NewsletterContext","NewsletterContextProvider","props","inicialState","newsletterList","state","dispatch","getNewsletters","type","children"],"sources":["C:/Users/L03028948/Documents/Documentos Idalia/Stori Challenge/Frontend/newsletter_app/src/contexts/newsletterContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport NewsletterReducer from '../reducer/NewsletterReducer';\r\nimport {GET_NEWSLETTERS} from '../const/actionTypes';\r\n\r\nexport const NewsletterContext = createContext();\r\n\r\nexport const NewsletterContextProvider = props => {\r\n   \r\n    const inicialState = {\r\n        newsletterList: []\r\n    };\r\n\r\n    //use reducer pra editar, crear eliminar, etc\r\n    //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\r\n    //para que realice el cambio en el valor del estado\r\n    const [state, dispatch] = useReducer(NewsletterReducer,inicialState);\r\n\r\n    //obtener todos los rows\r\n\r\n    const getNewsletters = () => {\r\n        dispatch({\r\n            type:GET_NEWSLETTERS\r\n        })\r\n    };\r\n\r\n    //el estado que queremos compartir\r\n    return (\r\n        <NewsletterContext.Provider\r\n          value={{\r\n           \r\n            newsletterList: state.newsletterList           \r\n          }}\r\n        >\r\n          {props.children}\r\n        </NewsletterContext.Provider>\r\n      );\r\n}\r\n\r\n \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,SAAQC,eAAe,QAAO,sBAAsB;AAAC;AAErD,OAAO,MAAMC,iBAAiB,gBAAGJ,aAAa,EAAE;AAEhD,OAAO,MAAMK,yBAAyB,GAAGC,KAAK,IAAI;EAAA;EAE9C,MAAMC,YAAY,GAAG;IACjBC,cAAc,EAAE;EACpB,CAAC;;EAED;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,UAAU,CAACC,iBAAiB,EAACK,YAAY,CAAC;;EAEpE;;EAEA,MAAMI,cAAc,GAAG,MAAM;IACzBD,QAAQ,CAAC;MACLE,IAAI,EAACT;IACT,CAAC,CAAC;EACN,CAAC;;EAED;EACA,oBACI,QAAC,iBAAiB,CAAC,QAAQ;IACzB,KAAK,EAAE;MAELK,cAAc,EAAEC,KAAK,CAACD;IACxB,CAAE;IAAA,UAEDF,KAAK,CAACO;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAErC,CAAC;AAAA,GA9BYR,yBAAyB;AAAA,KAAzBA,yBAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}