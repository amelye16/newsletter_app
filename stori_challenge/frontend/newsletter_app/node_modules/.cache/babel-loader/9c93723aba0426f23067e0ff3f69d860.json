{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L03028948\\\\Documents\\\\Documentos Idalia\\\\Stori Challenge\\\\Frontend\\\\newsletter_app\\\\src\\\\contexts\\\\NewsletterContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport NewsletterReducer from '../reducer/NewsletterReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewsletterContext = /*#__PURE__*/createContext();\nexport const NewsletterContextProvider = props => {\n  _s();\n  const inicialState = {\n    newsletterList: []\n  };\n  //use reducer pra editar, crear eliminar, etc\n  //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\n  //para que realice el cambio en el valor del estado\n  const [state, dispatch] = useReducer(NewsletterReducer, inicialState);\n\n  //el estado que queremos compartir\n  return /*#__PURE__*/_jsxDEV(NewsletterContext.Provider, {\n    value: {\n      newsletterList: state.newsletterList\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsletterContextProvider, \"6+r947IF8xxgMRtOjonieh8uxGc=\");\n_c = NewsletterContextProvider;\nvar _c;\n$RefreshReg$(_c, \"NewsletterContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","NewsletterReducer","NewsletterContext","NewsletterContextProvider","props","inicialState","newsletterList","state","dispatch","children"],"sources":["C:/Users/L03028948/Documents/Documentos Idalia/Stori Challenge/Frontend/newsletter_app/src/contexts/NewsletterContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport NewsletterReducer from '../reducer/NewsletterReducer';\r\n\r\nexport const NewsletterContext = createContext();\r\n\r\nexport const NewsletterContextProvider = props => {\r\n    const inicialState = {\r\n        newsletterList:[]\r\n    }\r\n    //use reducer pra editar, crear eliminar, etc\r\n    //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\r\n    //para que realice el cambio en el valor del estado\r\n    const [state, dispatch] = useReducer(NewsletterReducer,inicialState);\r\n\r\n    //el estado que queremos compartir\r\n    return(\r\n        <NewsletterContext.Provider\r\n            value = { {\r\n                    newsletterList:state.newsletterList\r\n             } }>\r\n            { props.children }\r\n        </NewsletterContext.Provider>\r\n    );\r\n}\r\n\r\n \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,iBAAiB,MAAM,8BAA8B;AAAC;AAE7D,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,EAAE;AAEhD,OAAO,MAAMI,yBAAyB,GAAGC,KAAK,IAAI;EAAA;EAC9C,MAAMC,YAAY,GAAG;IACjBC,cAAc,EAAC;EACnB,CAAC;EACD;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,UAAU,CAACC,iBAAiB,EAACI,YAAY,CAAC;;EAEpE;EACA,oBACI,QAAC,iBAAiB,CAAC,QAAQ;IACvB,KAAK,EAAK;MACFC,cAAc,EAACC,KAAK,CAACD;IAC5B,CAAG;IAAA,UACFF,KAAK,CAACK;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAErC,CAAC;AAAA,GAlBYN,yBAAyB;AAAA,KAAzBA,yBAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}