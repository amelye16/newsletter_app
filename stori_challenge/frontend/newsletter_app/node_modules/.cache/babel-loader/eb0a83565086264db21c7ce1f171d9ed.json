{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L03028948\\\\Documents\\\\Documentos Idalia\\\\Stori Challenge\\\\Frontend\\\\newsletter_app\\\\src\\\\contexts\\\\newsletterContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\nimport NewsletterReducer from \"../reducer/NewsletterReducer\";\nimport { GET_NEWSLETTERS, ADD_NEWSLETTER } from \"../const/actionTypes\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewsletterContext = /*#__PURE__*/createContext();\nexport const NewsletterContextProvider = props => {\n  _s();\n  const inicialState = {\n    newsletterList: [],\n    currentData: []\n  };\n\n  //use reducer pra editar, crear eliminar, etc\n  //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\n  //para que realice el cambio en el valor del estado\n  const [state, dispatch] = useReducer(NewsletterReducer, inicialState);\n\n  //obtener todos los rows\n\n  const getNewsletters = async () => {\n    try {\n      //const result = await Axios.get(\"/newsletter\");\n\n      let res = await Axios.get('/newsletter');\n      let data = res.data;\n      console.log(data);\n      dispatch({\n        type: GET_NEWSLETTERS,\n        //que tipo es\n        payload: data //que o cual es el valor que necesitamos modificar en el state\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const addNewsletter = async newsletter => {\n    try {\n      //const result2 = await Axios.post(\"/newsletter\",newsletter);\n\n      let res = await Axios.get(\"/newsletter\", newsletter);\n      let data = res.data;\n      console.log(\"data2 \" + data);\n      ;\n      dispatch({\n        type: ADD_NEWSLETTER,\n        //que tipo es\n        payload: data //que o cual es el valor que necesitamos modificar en el state\n      });\n\n      console.log(\"dcurrent \" + state.currentData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //el estado que queremos compartir\n\n  return /*#__PURE__*/_jsxDEV(NewsletterContext.Provider, {\n    value: {\n      currentData: state.currentData,\n      newsletterList: state.newsletterList,\n      getNewsletters,\n      addNewsletter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsletterContextProvider, \"6+r947IF8xxgMRtOjonieh8uxGc=\");\n_c = NewsletterContextProvider;\nvar _c;\n$RefreshReg$(_c, \"NewsletterContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","NewsletterReducer","GET_NEWSLETTERS","ADD_NEWSLETTER","Axios","NewsletterContext","NewsletterContextProvider","props","inicialState","newsletterList","currentData","state","dispatch","getNewsletters","res","get","data","console","log","type","payload","error","addNewsletter","newsletter","children"],"sources":["C:/Users/L03028948/Documents/Documentos Idalia/Stori Challenge/Frontend/newsletter_app/src/contexts/newsletterContext.js"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport NewsletterReducer from \"../reducer/NewsletterReducer\";\r\nimport { GET_NEWSLETTERS, ADD_NEWSLETTER } from \"../const/actionTypes\";\r\nimport Axios from \"axios\";\r\n\r\nexport const NewsletterContext = createContext();\r\n\r\nexport const NewsletterContextProvider = (props) => {\r\n  const inicialState = {\r\n    newsletterList: [],\r\n    currentData: [],\r\n    \r\n\r\n  };\r\n\r\n  //use reducer pra editar, crear eliminar, etc\r\n  //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\r\n  //para que realice el cambio en el valor del estado\r\n  const [state, dispatch] = useReducer(NewsletterReducer, inicialState);\r\n\r\n  //obtener todos los rows\r\n\r\n  const getNewsletters = async () => {\r\n    try {\r\n      //const result = await Axios.get(\"/newsletter\");\r\n    \r\n     let res = await Axios.get('/newsletter');\r\n\r\n      let data = res.data;\r\n       console.log( data);\r\n\r\n      dispatch({\r\n        type: GET_NEWSLETTERS, //que tipo es\r\n        payload: data //que o cual es el valor que necesitamos modificar en el state\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const addNewsletter = async(newsletter) => {\r\n\r\n    try{\r\n      //const result2 = await Axios.post(\"/newsletter\",newsletter);\r\n\r\n      let res = await Axios.get(\"/newsletter\",newsletter);\r\n\r\n      let data = res.data;\r\n      console.log(\"data2 \"+data);\r\n;\r\n\r\n        dispatch({\r\n            type: ADD_NEWSLETTER, //que tipo es\r\n            payload: data //que o cual es el valor que necesitamos modificar en el state\r\n          });\r\n\r\n          console.log(\"dcurrent \"+state.currentData);\r\n         \r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n    \r\n  };\r\n\r\n  //el estado que queremos compartir\r\n  \r\n  return (\r\n    <NewsletterContext.Provider\r\n      value={{\r\n        currentData:state.currentData,\r\n        newsletterList: state.newsletterList,\r\n        \r\n\r\n        getNewsletters,\r\n        addNewsletter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </NewsletterContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,SAASC,eAAe,EAAEC,cAAc,QAAQ,sBAAsB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,MAAMC,iBAAiB,gBAAGN,aAAa,EAAE;AAEhD,OAAO,MAAMO,yBAAyB,GAAIC,KAAK,IAAK;EAAA;EAClD,MAAMC,YAAY,GAAG;IACnBC,cAAc,EAAE,EAAE;IAClBC,WAAW,EAAE;EAGf,CAAC;;EAED;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACC,iBAAiB,EAAEO,YAAY,CAAC;;EAErE;;EAEA,MAAMK,cAAc,GAAG,YAAY;IACjC,IAAI;MACF;;MAED,IAAIC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,aAAa,CAAC;MAEvC,IAAIC,IAAI,GAAGF,GAAG,CAACE,IAAI;MAClBC,OAAO,CAACC,GAAG,CAAEF,IAAI,CAAC;MAEnBJ,QAAQ,CAAC;QACPO,IAAI,EAAEjB,eAAe;QAAE;QACvBkB,OAAO,EAAEJ,IAAI,CAAC;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAMC,UAAU,IAAK;IAEzC,IAAG;MACD;;MAEA,IAAIT,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,aAAa,EAACQ,UAAU,CAAC;MAEnD,IAAIP,IAAI,GAAGF,GAAG,CAACE,IAAI;MACnBC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACF,IAAI,CAAC;MAChC;MAEQJ,QAAQ,CAAC;QACLO,IAAI,EAAEhB,cAAc;QAAE;QACtBiB,OAAO,EAAEJ,IAAI,CAAC;MAChB,CAAC,CAAC;;MAEFC,OAAO,CAACC,GAAG,CAAC,WAAW,GAACP,KAAK,CAACD,WAAW,CAAC;IAEhD,CAAC,CACD,OAAMW,KAAK,EAAC;MACRJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB;EAEF,CAAC;;EAED;;EAEA,oBACE,QAAC,iBAAiB,CAAC,QAAQ;IACzB,KAAK,EAAE;MACLX,WAAW,EAACC,KAAK,CAACD,WAAW;MAC7BD,cAAc,EAAEE,KAAK,CAACF,cAAc;MAGpCI,cAAc;MACdS;IACF,CAAE;IAAA,UAEDf,KAAK,CAACiB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAEjC,CAAC;AAAC,GA1EWlB,yBAAyB;AAAA,KAAzBA,yBAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}