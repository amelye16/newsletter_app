{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L03028948\\\\Documents\\\\Documentos Idalia\\\\Stori Challenge\\\\Frontend\\\\newsletter_app\\\\src\\\\contexts\\\\newsletterContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\nimport NewsletterReducer from \"../reducer/NewsletterReducer\";\nimport { GET_NEWSLETTERS, ADD_NEWSLETTER, ADD_MAIL_USER, GET_ALL_NEWSLETTER_TYPE, GET_ONE_NEWSLETTER, GET_ALL_SUSCRIBED } from \"../const/actionTypes\";\nimport Axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewsletterContext = /*#__PURE__*/createContext();\nexport const NewsletterContextProvider = props => {\n  _s();\n  const inicialState = {\n    newsletterList: [],\n    newsletterTypeList: [],\n    suscribedList: [],\n    currentData: {},\n    currentDataList: {}\n  };\n  function showAlert(icon, details) {\n    Swal.fire({\n      icon: icon,\n      title: details.message,\n      text: details.details\n    });\n  }\n  //use reducer pra editar, crear eliminar, etc\n  //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\n  //para que realice el cambio en el valor del estado\n  const [state, dispatch] = useReducer(NewsletterReducer, inicialState);\n\n  //obtener todos los rows\n\n  const getNewsletters = async () => {\n    try {\n      //const result = await Axios.get(\"/newsletter\");\n\n      let res = await Axios.get('/newsletter');\n      let data = res.data;\n      dispatch({\n        type: GET_NEWSLETTERS,\n        //que tipo es\n        payload: data //que o cual es el valor que necesitamos modificar en el state\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getAllNewsletterType = async () => {\n    try {\n      let res = await Axios.get('/newsletterType');\n      dispatch({\n        type: GET_ALL_NEWSLETTER_TYPE,\n        //que tipo es\n        payload: res.data //que o cual es el valor que necesitamos modificar en el state\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getAllSuscribed = async email => {\n    try {\n      let res = await Axios.get(`/newsletterUser/${email}`);\n      dispatch({\n        type: GET_ALL_NEWSLETTER_TYPE,\n        //que tipo es\n        payload: res.data //que o cual es el valor que necesitamos modificar en el state\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getNewsletter = async newsletter => {\n    try {\n      //let res = await Axios.get('/newsletterType');\n      dispatch({\n        type: GET_ONE_NEWSLETTER,\n        //que tipo es\n        payload: newsletter //que o cual es el valor que necesitamos modificar en el state\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const addNewsletter = async newsletter => {\n    let data = {};\n    try {\n      let res = await Axios.post(\"/newsletter\", newsletter);\n      let data = res.data;\n      dispatch({\n        type: ADD_NEWSLETTER,\n        //que tipo es\n        payload: data //que o cual es el valor que necesitamos modificar en el state\n      });\n\n      showAlert(\"success\", data);\n    } catch (error) {\n      if (data.length === 0) {\n        const errorException = {\n          message: \"We have a problem\",\n          details: error.message\n        };\n        showAlert(\"error\", errorException);\n      } else showAlert(\"error\", data);\n    }\n  };\n  const addEmailUser = async param1 => {\n    console.log(\"entra 2\");\n    let data = {};\n    try {\n      let res = await Axios.post(\"/user\", param1);\n      data = res.data;\n      console.log(\"res \" + res);\n      dispatch({\n        type: ADD_MAIL_USER,\n        //que tipo es\n        payload: data //que o cual es el valor que necesitamos modificar en el state\n      });\n\n      //showAlert(\"success\", data);\n      /*let res2 = await Axios.post(\"/email\",param2);\r\n      console.log(res2);\r\n      let data2= res2.data;\r\n      console.log(data2);\r\n              dispatch({\r\n            type: SEND_MAIL_USER, //que tipo es\r\n            payload: data2 //que o cual es el valor que necesitamos modificar en el state\r\n          });\r\n      */\n      showAlert(\"success\", data);\n    } catch (error) {\n      if (data.length === 0) {\n        const errorException = {\n          message: \"We have a problem\",\n          details: error.message\n        };\n        showAlert(\"error\", errorException);\n      } else showAlert(\"success\", data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NewsletterContext.Provider, {\n    value: {\n      currentData: state.currentData,\n      newsletterList: state.newsletterList,\n      newsletterTypeList: state.newsletterTypeList,\n      currentDataList: state.currentDataList,\n      suscribedList: state.suscribedList,\n      getNewsletters,\n      addNewsletter,\n      addEmailUser,\n      getAllNewsletterType,\n      getNewsletter,\n      getAllSuscribed\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsletterContextProvider, \"6+r947IF8xxgMRtOjonieh8uxGc=\");\n_c = NewsletterContextProvider;\nvar _c;\n$RefreshReg$(_c, \"NewsletterContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","NewsletterReducer","GET_NEWSLETTERS","ADD_NEWSLETTER","ADD_MAIL_USER","GET_ALL_NEWSLETTER_TYPE","GET_ONE_NEWSLETTER","GET_ALL_SUSCRIBED","Axios","Swal","NewsletterContext","NewsletterContextProvider","props","inicialState","newsletterList","newsletterTypeList","suscribedList","currentData","currentDataList","showAlert","icon","details","fire","title","message","text","state","dispatch","getNewsletters","res","get","data","type","payload","error","console","log","getAllNewsletterType","getAllSuscribed","email","getNewsletter","newsletter","addNewsletter","post","length","errorException","addEmailUser","param1","children"],"sources":["C:/Users/L03028948/Documents/Documentos Idalia/Stori Challenge/Frontend/newsletter_app/src/contexts/newsletterContext.js"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport NewsletterReducer from \"../reducer/NewsletterReducer\";\r\nimport { GET_NEWSLETTERS, ADD_NEWSLETTER,ADD_MAIL_USER,GET_ALL_NEWSLETTER_TYPE,GET_ONE_NEWSLETTER ,GET_ALL_SUSCRIBED} from \"../const/actionTypes\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const NewsletterContext = createContext();\r\n\r\nexport const NewsletterContextProvider = (props) => {\r\n  const inicialState = {\r\n    newsletterList: [],\r\n    newsletterTypeList: [],\r\n    suscribedList:[],\r\n    currentData: {},\r\n    currentDataList: {},\r\n\r\n  };\r\n  function showAlert(icon, details) {\r\n    Swal.fire({\r\n      icon: icon,\r\n      title: details.message,\r\n      text: details.details,\r\n    });\r\n   \r\n  }\r\n  //use reducer pra editar, crear eliminar, etc\r\n  //dispathc método logado al state y que nos, es mediante ese método que indicaremos las acciones a realizar\r\n  //para que realice el cambio en el valor del estado\r\n  const [state, dispatch] = useReducer(NewsletterReducer, inicialState);\r\n\r\n  //obtener todos los rows\r\n\r\n  const getNewsletters = async () => {\r\n    try {\r\n      //const result = await Axios.get(\"/newsletter\");\r\n    \r\n     let res = await Axios.get('/newsletter');\r\n\r\n      let data = res.data;\r\n      \r\n      dispatch({\r\n        type: GET_NEWSLETTERS, //que tipo es\r\n        payload: data //que o cual es el valor que necesitamos modificar en el state\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAllNewsletterType = async () => {\r\n    try {\r\n      let res = await Axios.get('/newsletterType');\r\n      dispatch({\r\n        type: GET_ALL_NEWSLETTER_TYPE, //que tipo es\r\n        payload: res.data //que o cual es el valor que necesitamos modificar en el state\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getAllSuscribed = async (email) => {\r\n    try {\r\n      let res = await Axios.get(`/newsletterUser/${email}`);\r\n      dispatch({\r\n        type: GET_ALL_NEWSLETTER_TYPE, //que tipo es\r\n        payload: res.data //que o cual es el valor que necesitamos modificar en el state\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getNewsletter = async (newsletter) => {\r\n    try {\r\n      //let res = await Axios.get('/newsletterType');\r\n      dispatch({\r\n        type: GET_ONE_NEWSLETTER, //que tipo es\r\n        payload: newsletter //que o cual es el valor que necesitamos modificar en el state\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  \r\n  const addNewsletter = async(newsletter) => {\r\n    let data={};\r\n    try{\r\n    \r\n      let res = await Axios.post(\"/newsletter\",newsletter);\r\n\r\n      let data = res.data;\r\n     \r\n\r\n        dispatch({\r\n            type: ADD_NEWSLETTER, //que tipo es\r\n            payload: data //que o cual es el valor que necesitamos modificar en el state\r\n          });\r\n\r\n          showAlert(\"success\", data);\r\n         \r\n    }\r\n    catch(error){\r\n      if( data.length === 0 ) {\r\n        const errorException = {\r\n          message: \"We have a problem\",\r\n          details: error.message,          \r\n        };\r\n        showAlert(\"error\", errorException);\r\n      }\r\n      else\r\n      showAlert(\"error\", data);\r\n    }\r\n    \r\n  };\r\n\r\n  const addEmailUser= async(param1) => {\r\n\r\n    console.log(\"entra 2\");\r\n    let data ={};\r\n    try{\r\n    \r\n      let res = await Axios.post(\"/user\",param1);\r\n\r\n      data = res.data;\r\n      console.log(\"res \"+res);\r\n\r\n        dispatch({\r\n            type: ADD_MAIL_USER, //que tipo es\r\n            payload: data //que o cual es el valor que necesitamos modificar en el state\r\n          });\r\n\r\n          //showAlert(\"success\", data);\r\n          /*let res2 = await Axios.post(\"/email\",param2);\r\n          console.log(res2);\r\n          let data2= res2.data;\r\n          console.log(data2);\r\n    \r\n            dispatch({\r\n                type: SEND_MAIL_USER, //que tipo es\r\n                payload: data2 //que o cual es el valor que necesitamos modificar en el state\r\n              });\r\n    */\r\n              showAlert(\"success\", data);\r\n         \r\n    }\r\n    catch(error){\r\n\r\n      if( data.length === 0 ) {\r\n        const errorException = {\r\n          message: \"We have a problem\",\r\n          details: error.message,          \r\n        };\r\n        showAlert(\"error\", errorException);\r\n      }\r\n      else\r\n      showAlert(\"success\", data);\r\n    \r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  \r\n  return (\r\n    <NewsletterContext.Provider\r\n      value={{\r\n        currentData:state.currentData,\r\n        newsletterList: state.newsletterList,\r\n        newsletterTypeList: state.newsletterTypeList,\r\n        currentDataList:  state.currentDataList,\r\n        suscribedList:state.suscribedList,\r\n        \r\n\r\n        getNewsletters,\r\n        addNewsletter,\r\n        addEmailUser,\r\n        getAllNewsletterType,\r\n        getNewsletter,\r\n        getAllSuscribed,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </NewsletterContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}