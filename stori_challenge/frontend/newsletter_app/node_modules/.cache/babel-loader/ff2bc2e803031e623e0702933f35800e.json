{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L03028948\\\\Documents\\\\Documentos Idalia\\\\Stori Challenge\\\\Frontend\\\\newsletter_app\\\\src\\\\pages\\\\Unsuscribed.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { NewsletterContext } from \"../contexts/newsletterContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Unsuscribed = () => {\n  _s();\n  const {\n    suscribedList,\n    getAllSuscribed,\n    unsuscribedNewsletter\n  } = useContext(NewsletterContext);\n\n  //Creamos la instancia\n  const urlParams = new URLSearchParams(window.location.search);\n  const [message, setMensaje] = useState(\"\");\n\n  //Accedemos a los valores\n  let email = urlParams.get('email');\n  useEffect(() => {\n    getAllSuscribed(email);\n    console.log(\"suscribedList.length \");\n    console.log(suscribedList.length);\n    if (suscribedList.length > 0) setMensaje(\"Con datos para suscribir\");else setMensaje(\"Sin datos para suscribir\");\n  }, []);\n  let unsuscribedList;\n  const unsuscribedHandler = e => {\n    let checks = document.querySelectorAll('.form-check-input');\n    unsuscribedList = \"\";\n    checks.forEach(e => {\n      if (e.checked === true) {\n        unsuscribedList += e.value + \" \";\n      }\n    });\n    let paramUnsiscribed = new FormData();\n    paramUnsiscribed.append(\"email\", email);\n    paramUnsiscribed.append(\"unsuscribedList\", unsuscribedList);\n    unsuscribedNewsletter(paramUnsiscribed);\n    //console.log(\"\"+unsuscribedList);\n  };\n\n  suscribedList.map(index => console.log(index));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: \"Unsuscribed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: \"We will miss you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"If you are sure to unsubscribe, you can to continue the process.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mt-3\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), suscribedList.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: index[0],\n          id: \"flexCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"flexCheckDefault\",\n          children: [index[2], suscribedList.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, index[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"buttom\",\n        className: \"btn btn-primary  mt-3 mb-5\",\n        onClick: unsuscribedHandler,\n        children: \"Unsuscribed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Unsuscribed, \"L1IY71OySkwRAcm2NkPAkt6bJ6E=\");\n_c = Unsuscribed;\nvar _c;\n$RefreshReg$(_c, \"Unsuscribed\");","map":{"version":3,"names":["React","useEffect","useContext","useState","NewsletterContext","Unsuscribed","suscribedList","getAllSuscribed","unsuscribedNewsletter","urlParams","URLSearchParams","window","location","search","message","setMensaje","email","get","console","log","length","unsuscribedList","unsuscribedHandler","e","checks","document","querySelectorAll","forEach","checked","value","paramUnsiscribed","FormData","append","map","index"],"sources":["C:/Users/L03028948/Documents/Documentos Idalia/Stori Challenge/Frontend/newsletter_app/src/pages/Unsuscribed.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useContext,useState } from \"react\";\r\nimport { NewsletterContext } from \"../contexts/newsletterContext\";\r\n\r\nexport const Unsuscribed = () => {\r\n  const { suscribedList, getAllSuscribed, unsuscribedNewsletter} = useContext(NewsletterContext);\r\n\r\n  //Creamos la instancia\r\nconst urlParams = new URLSearchParams( window.location.search);\r\nconst [message, setMensaje] = useState(\"\");\r\n\r\n//Accedemos a los valores\r\nlet email = urlParams.get('email');\r\n\r\n  useEffect(() => {\r\n    getAllSuscribed(email);\r\n    console.log(\"suscribedList.length \");\r\n    console.log(suscribedList.length );\r\n    if(suscribedList.length > 0)\r\n    setMensaje(\"Con datos para suscribir\");\r\n    else\r\n    setMensaje(\"Sin datos para suscribir\");\r\n   \r\n  }, []);\r\n\r\n  let unsuscribedList;\r\n  const unsuscribedHandler = (e) => {\r\n    let checks =  document.querySelectorAll('.form-check-input');\r\n    unsuscribedList = \"\";\r\n    checks.forEach((e) => {\r\n        if (e.checked ===true){\r\n            unsuscribedList += e.value + \" \";\r\n        }\r\n    });\r\n\r\n    let paramUnsiscribed = new FormData();\r\n    paramUnsiscribed.append(\"email\", email);\r\n    paramUnsiscribed.append(\"unsuscribedList\", unsuscribedList);\r\n    unsuscribedNewsletter(paramUnsiscribed);\r\n    //console.log(\"\"+unsuscribedList);\r\n\r\n  }\r\n  suscribedList.map((index) => console.log(index));\r\n\r\n  return (\r\n    <div className=\"card mt-3\">\r\n       \r\n      <div className=\"card-header\">Unsuscribed</div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">We will miss you</h5>\r\n        <p className=\"card-text\">\r\n          If you are sure to unsubscribe, you can to continue the process. \r\n        </p>\r\n        {message && (\r\n            <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n              {message}\r\n            </div>\r\n          )}\r\n        {suscribedList.map((index) => (\r\n        \r\n            <div className=\"form-check\"  key={index[0]}>\r\n              <input\r\n              \r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                value={index[0]}\r\n                id=\"flexCheckDefault\"\r\n              />\r\n              <label  className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                {index[2]}{suscribedList.length}\r\n              </label>\r\n            </div>\r\n          \r\n        ))}\r\n        <button type=\"buttom\" className=\"btn btn-primary  mt-3 mb-5\" onClick={unsuscribedHandler}>\r\n          Unsuscribed\r\n        </button>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}